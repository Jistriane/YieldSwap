/*
 * üîê ARQUIVO ASSINADO DIGITALMENTE
 * 
 * ‚úçÔ∏è Assinado por: Jistriane Brunielli Silva de Oliveira
 * üìÖ Validade: 10 anos (at√© 2035)
 * üîí M√©todo: RSA-4096 + SHA-512
 * üìú Verifica√ß√£o: SIGNATURE.md
 * ‚ö†Ô∏è  MODIFICA√á√ïES N√ÉO AUTORIZADAS INVALIDAR√ÉO A ASSINATURA
 */


import { Controller, Get } from '@nestjs/common';
import { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';
import { HealthService } from './health.service';

@ApiTags('health')
@Controller('health')
export class HealthController {
  constructor(private readonly healthService: HealthService) {}

  @Get()
  @ApiOperation({ summary: 'Verificar sa√∫de do sistema' })
  @ApiResponse({
    status: 200,
    description: 'Retorna o status de sa√∫de de todos os servi√ßos',
    schema: {
      type: 'object',
      properties: {
        status: { type: 'string' },
        timestamp: { type: 'string' },
        uptime: { type: 'number' },
        redis: {
          type: 'object',
          properties: {
            connected: { type: 'boolean' },
            latencyMs: { type: 'number' },
          },
        },
        rpc: {
          type: 'object',
          properties: {
            connected: { type: 'boolean' },
            latencyMs: { type: 'number' },
            blockHeight: { type: 'number' },
          },
        },
      },
    },
  })
  async check(): Promise<any> {
    return this.healthService.check();
  }
} 